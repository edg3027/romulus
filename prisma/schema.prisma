// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artist {
  id       Int       @id @default(autoincrement())
  name     String
  releases Release[]
  tracks   Track[]
}

model Release {
  id          Int             @id @default(autoincrement())
  title       String
  artists     Artist[]
  releaseDate String?
  ratings     ReleaseRating[]
  reviews     ReleaseReview[]
}

model Track {
  id         Int           @id @default(autoincrement())
  title      String
  durationMs Int
  artists    Artist[]
  ratings    TrackRating[]
  reviews    TrackReview[]
}

model Account {
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  darkMode Boolean @default(true)

  releaseRatings ReleaseRating[]
  trackRatings   TrackRating[]
  releaseReviews ReleaseReview[]
  trackReviews   TrackReview[]
  genresEdited   Genre[]
}

model ReleaseRating {
  id        Int     @id @default(autoincrement())
  account   Account @relation(fields: [accountId], references: [id])
  accountId Int
  release   Release @relation(fields: [releaseId], references: [id])
  releaseId Int
  rating    Int
}

model TrackRating {
  id        Int     @id @default(autoincrement())
  account   Account @relation(fields: [accountId], references: [id])
  accountId Int
  track     Track   @relation(fields: [trackId], references: [id])
  trackId   Int
  rating    Int
}

model ReleaseReview {
  id        Int     @id @default(autoincrement())
  account   Account @relation(fields: [accountId], references: [id])
  accountId Int
  release   Release @relation(fields: [releaseId], references: [id])
  releaseId Int
  title     String?
  text      String
}

model TrackReview {
  id        Int     @id @default(autoincrement())
  account   Account @relation(fields: [accountId], references: [id])
  accountId Int
  track     Track   @relation(fields: [trackId], references: [id])
  trackId   Int
  title     String?
  text      String
}

model Genre {
  id               Int        @id @default(autoincrement())
  name             String
  shortDescription String?
  longDescription  String?
  locations        Location[]
  contributors     Account[]
  startDate        String?
  endDate          String?
  parentGenres     Genre[]    @relation("hierarchy")
  childGenres      Genre[]    @relation("hierarchy")

  x Int?
  y Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id Int @id @default(autoincrement())

  city    String?
  region  String?
  country String

  genres Genre[]

  @@unique([city, region, country])
}
